// Generated by CoffeeScript 1.3.3

(function($) {
  $.extend($.fn, {
    chunks: function(options) {
      var overflow, settings,
        _this = this;
      this.default_options = {
        lines: false
      };
      settings = $.extend({}, this.default_options, options);
      if (settings.lines === false) {
        overflow = false;
      }
      this.to_words = function() {
        var html, items, separator, tag_name;
        separator = settings.separator || " ";
        tag_name = settings.tag_name || "span";
        html = "";
        items = $(_this.$el).html().split(separator);
        _.each(items, function(word, i) {
          var spacer;
          spacer = i < items.length - 1 ? " " : "";
          return html += "<" + tag_name + ">" + word + spacer + "</" + tag_name + ">";
        });
        return _this.words = $(_this).html(html).children();
      };
      this.to_lines = function() {
        var chunk_lines, groups, line_words, lines, word, _i, _j, _len, _len1, _line;
        groups = _.groupBy(_this.words, function(element) {
          return $(element).offset().top;
        });
        chunk_lines = _.toArray(groups);
        lines = [];
        for (_i = 0, _len = chunk_lines.length; _i < _len; _i++) {
          _line = chunk_lines[_i];
          line_words = "";
          for (_j = 0, _len1 = _line.length; _j < _len1; _j++) {
            word = _line[_j];
            line_words += word.innerHTML;
          }
          if (settings.overflow === 'hidden') {
            lines.push("<div class='case'><div class='line'>" + line_words + "</div></div>");
          } else {
            lines.push("<div class='line'>" + line_words + "</div>");
          }
        }
        return $(_this).html(lines);
      };
      this.set_css = function() {
        var tag_name;
        tag_name = settings.overflow ? '.case' : '.line';
        return $(tag_name).each(function(i, tn) {
          var line_left;
          $(tn).css({
            position: "absolute",
            top: i * $(tn).height()
          });
          if (settings.overflow) {
            $(tn).css("overflow", "hidden");
          }
          switch (settings.align) {
            case 'center':
              line_left = ($(tn).parent().width() - $(tn).width()) / 2;
              break;
            case 'right':
              line_left = $(tn).parent().width() - $(tn).width();
          }
          if (line_left) {
            return $(tn).css('left', line_left);
          }
        });
      };
      return this.each(function(i, el) {
        _this.$el = $(el);
        _this.to_words();
        if (settings.lines) {
          _this.to_lines();
        }
        if (settings.lines) {
          return _this.set_css();
        }
      });
    }
  });
  return this;
})(this.jQuery);
